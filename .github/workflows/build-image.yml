name: Build Image

on:   
  push: 
  # pull_request:
  workflow_dispatch:

jobs:
  build:
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os: [ ubuntu-latest ]
    #     example:
    #       # - ./firmware/esp-tunein-player
    #       - ./firmware/esp32-soundboard
    #       - ./firmware/test-peripheral/esp32-test-sdcard
    #       - ./firmware/test-peripheral/esp32-test-touch-screen
    #       - ./firmware/test-peripheral/esp32-esp8266-peripheral-test
    #       - ./firmware/test-peripheral/esp32-test-touch-pins
    #       # - ./firmware/test-peripheral/esp32-arduinomenu
    #       # - ./firmware/test-peripheral/esp32-arduinomenu-dynamic
    #       - ./firmware/test-peripheral/esp32-test-battery
    #       - ./firmware/test-visual/esp32-esp8266-adafruit-spi-display-test
    #       # - ./firmware/test-visual/esp32-spotify-screen
    #       - ./firmware/test-visual/esp32-esp8266-fake-win-xp
    #       - ./firmware/test-visual/esp32-demo-vu-meters
    #       - ./firmware/test-visual/esp32-esp8266-currency-monitor
    #       - ./firmware/test-visual/esp32-test-lvgl
    #       # - ./firmware/test-visual/esp32-esp8266-screensaver
    #       - ./firmware/test-visual/esp32-demo-ir-volume
    #       - ./firmware/test-visual/esp32-esp8266-trex-game
    #       # - ./firmware/test-visual/esp32-esp8266-weather-station-color
    #       - ./firmware/test-visual/esp32-esp8266-spi-display-test
    #       # - ./firmware/test-visual/esp32-esp8266-weather-station
    #       - ./firmware/test-visual/esp32-demo-visualisations
    #       - ./firmware/test-audio/esp32-esp8266-audio-test-spiffs-once
    #       - ./firmware/test-audio/esp32-esp8266-audio-test-spiffs-random
    #       - ./firmware/test-audio/esp32-esp8266-audio-test-stream
    #       - ./firmware/test-audio/esp32-esp8266-wifi-radio-station
    #       - ./firmware/test-audio/esp32-esp8266-audio-test-stream-web
    #       - ./firmware/test-audio/esp32-esp8266-audio-test-eeprom
    #       - ./firmware/test-audio/esp32-esp8266-audio-test-sdcard-random
    #       - ./firmware/test-audio/esp32-esp8266-audio-test-spiffs
    #       - ./firmware/test-audio/esp32-esp8266-text-to-speach-sam
    #       - ./firmware/test-audio/esp32-esp8266-talking-clock
    #       # ./firmware/third-party-forks/squeezelite-esp32/components/spotify/cspot/bell/nanopb/examples/platformio
    #       # ./firmware/third-party-forks/ESP32-MiniWebRadio
    #       # ./firmware/third-party-forks/Ka-Radio32
    #       # ./firmware/third-party-forks/esp32-cspot/targets/esp32
    #       # ./firmware/third-party-forks/esp32-cspot/cspot/bell/nanopb/examples/platformio
    runs-on: ubuntu-latest
    name: Build Image
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: help2man libtool-bin
          version: 1.0

      - uses: actions/checkout@v3
        name: Checkout submodules
        with:
          submodules: "recursive"

      - name: Build dynconfig
        run: |
          make -C xtensa-dynconfig ORIG=1 CONF_DIR=`pwd` esp32s3.so

      - name: Build toolchain
        run: |
          make -C xtensa-dynconfig ORIG=1 CONF_DIR=`pwd` esp32s3.so
      
      - name: Build crosstoll-NG
        working-directory: crosstool-NG
        run: |
          ./bootstrap && ./configure --enable-local && make
          
      - name: Build toolchain
        working-directory: crosstool-NG
        run: |
          ./ct-ng xtensa-esp32s3-linux-uclibcfdpic
          CT_PREFIX=`pwd`/builds ./ct-ng build

      - name: Configure buildroot 
        run: |
          make -C buildroot O=`pwd`/build-buildroot-esp32s3 esp32s3_defconfig
          buildroot/utils/config --file build-buildroot-esp32s3/.config --set-str TOOLCHAIN_EXTERNAL_PATH `pwd`/crosstool-NG/builds/xtensa-esp32s3-linux-uclibcfdpic
          buildroot/utils/config --file build-buildroot-esp32s3/.config --set-str TOOLCHAIN_EXTERNAL_PREFIX '$(ARCH)-esp32s3-linux-uclibcfdpic'
          buildroot/utils/config --file build-buildroot-esp32s3/.config --set-str TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX '$(ARCH)-esp32s3-linux-uclibcfdpic'
      
      - name: Configure buildroot 
        run: |
          make -C buildroot O=`pwd`/build-buildroot-esp32s3

      - name: Prepare esp_driver
        working-directory: esp-hosted/esp_hosted_ng/esp/esp_driver
        run: |
          cmake .
  
      - name: Build esp_driver
        working-directory: esp-hosted/esp_hosted_ng/esp/esp_driver/network_adapter
        run: |
          . ../esp-idf/export.sh
          idf.py set-target esp32s3
          cp sdkconfig.defaults.esp32s3 sdkconfig
          idf.py build

      
